{"majorversion": 3, "classmap": {"YAHOO_bootstrap": {"global": "", "name": "YAHOO_bootstrap", "constructors": [{"params": [{"type": "", "name": "o", "description": " Optional configuration object.  Options:\n<ul>\n<li>------------------------------------------------------------------------</li>\n<li>Global:</li>\n<li>------------------------------------------------------------------------</li>\n<li>debug: Turn debug statements on or off</li>\n<li>injected: set to true if the yui seed file was dynamically loaded in\norder to bootstrap components relying on the window load event and onDOMReady\n(former injecting on YAHOO_config).</li>\n<li>locale: default locale</li>\n<li>-------------------------------------------------------------------------</li>\n<li>For loader:</li>\n<li>-------------------------------------------------------------------------</li>\n<li>base: The base dir</li>\n<li>comboBase: The YUI combo service base dir. Ex: http://yui.yahooapis.com/combo?</li>\n<li>root: The root path to prepend to module names for the combo service. Ex\\\\: 2\\\\.5\\\\.2\\\\/build\\\\/</li>\n<li>filter:\nA filter to apply to result urls.  This filter will modify the default\npath for all modules.  The default path for the YUI library is the\nminified version of the files (e.g., event-min.js).  The filter property\ncan be a predefined filter or a custom filter.  The valid predefined \nfilters are:\n<dl>\n<dt>DEBUG</dt>\n<dd>Selects the debug versions of the library (e.g., event-debug.js).\nThis option will automatically include the Logger widget</dd>\n<dt>RAW</dt>\n<dd>Selects the non-minified version of the library (e.g., event.js).</dd>\n</dl>\nYou can also define a custom filter, which must be an object literal \ncontaining a search expression and a replace string:\n<pre>\nmyFilter: &#123; \n'searchExp': \"-min\\\\.js\", \n'replaceStr': \"-debug.js\"\n&#125;\n</pre>\n</li>\n<li>filters: per-component filter specification.  If specified for a given component, this overrides the filter config</li>\n<li>combine:\nUse the YUI combo service to reduce the number of http connections required to load your dependencies</li>\n<li>ignore:\nA list of modules that should never be dynamically loaded</li>\n<li>force:\nA list of modules that should always be loaded when required, even if already present on the page</li>\n<li>insertBefore:\nNode or id for a node that should be used as the insertion point for new nodes</li>\n<li>charset:\ncharset for dynamic nodes</li>\n<li>timeout:\nnumber of milliseconds before a timeout occurs when dynamically loading nodes.  in not set, there is no timeout</li>\n<li>onSuccess:\ncallback for the 'success' event</li>\n<li>onFailure:\ncallback for the 'failure' event</li>\n<li>onTimeout:\ncallback for the 'timeout' event</li>\n<li>onProgress:\ncallback executed each time a script or css file is loaded</li>\n<li>modules:\nA list of module definitions.  See Loader.addModule for the supported module metadata</li>\n<li>seed:\ncustom COMBO url to load a default set of components including loader in a single entry.</li>\n</ul>"}, {"type": "boolean", "name": "def", "description": "  if true, \"o\" will be used as the default configuration object for succesive \ncalls without the \"o\" argument."}], "description": "YAHOO_bootstrap function.  If YAHOO_bootstrap is already defined, the\nexisting YAHOO_bootstrap function will not be overwritten to preserve\nthe state of the bootstrap."}], "namespace": "", "module": "bootstrap", "methods": {"use": {"return": {"type": "", "description": "void"}, "params": [{"type": "string", "name": "modules*", "description": "  1-n modules to bind (uses arguments array)"}, {"type": "function", "name": "*callback", "description": "  callback function executed when \nthe instance has the required functionality.  If included, it\nmust be the last parameter.\nYAHOO_bootstrap().use('tabview', callback)"}], "description": "Load a set of modules and notify thru the callback method.", "guessedname": "use", "guessedtype": "function"}, "_loaderDispatch": {"static": "", "return": {"type": "", "description": "void"}, "description": "Dispatch the first element from the job queue", "private": ""}, "_includeLoader": {"static": "", "return": {"type": "", "description": "void"}, "description": "Include YUI Loader in the the page, and wait until it get available to start dispatching jobs\nfrom the queue", "private": ""}, "_addMods": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "object", "name": "m", "description": "  collection of modules"}], "description": "Add a set of modules to _loaderObj, it also normalize the module information before include it", "private": ""}, "_initLoader": {"static": "", "return": {"type": "", "description": "void"}, "description": "Initialization process for the YUI Loader obj. In YUI 2.x we should\nhave a single instance to control everything.", "private": ""}, "_getConf": {"return": {"type": "", "description": "object computed configuration"}, "static": "", "params": [{"type": "object", "name": "o", "description": "  currrent configuration object"}], "description": "Verify if the current configuration object just defines new modules. If that's the case, \nwe will use \"_config\" as the computed configuration, and \"o\" as the list of modules to add.", "private": ""}}, "file": "yahoo_bootstrap.js", "shortname": "YAHOO_bootstrap", "description": "YAHOO_bootstrap function.  If YAHOO_bootstrap is already defined, the\nexisting YAHOO_bootstrap function will not be overwritten to preserve\nthe state of the bootstrap."}, "YUI_bootstrap": {"global": "", "name": "YUI_bootstrap", "constructors": [{"params": [{"type": "", "name": "o", "description": " Optional configuration object.  Options:\n<ul>\n<li>------------------------------------------------------------------------</li>\n<li>Global:</li>\n<li>------------------------------------------------------------------------</li>\n<li>debug: Turn debug statements on or off</li>\n<li>injected: set to true if the yui seed file was dynamically loaded in\norder to bootstrap components relying on the window load event and onDOMReady\n(former injecting on YAHOO_config).</li>\n<li>locale: default locale</li>\n<li>-------------------------------------------------------------------------</li>\n<li>For loader:</li>\n<li>-------------------------------------------------------------------------</li>\n<li>base: The base dir</li>\n<li>comboBase: The YUI combo service base dir. Ex: http://yui.yahooapis.com/combo?</li>\n<li>root: The root path to prepend to module names for the combo service. Ex\\\\: 2\\\\.5\\\\.2\\\\/build\\\\/</li>\n<li>filter:\nA filter to apply to result urls.  This filter will modify the default\npath for all modules.  The default path for the YUI library is the\nminified version of the files (e.g., event-min.js).  The filter property\ncan be a predefined filter or a custom filter.  The valid predefined \nfilters are:\n<dl>\n<dt>DEBUG</dt>\n<dd>Selects the debug versions of the library (e.g., event-debug.js).\nThis option will automatically include the Logger widget</dd>\n<dt>RAW</dt>\n<dd>Selects the non-minified version of the library (e.g., event.js).</dd>\n</dl>\nYou can also define a custom filter, which must be an object literal \ncontaining a search expression and a replace string:\n<pre>\nmyFilter: &#123; \n'searchExp': \"-min\\\\.js\", \n'replaceStr': \"-debug.js\"\n&#125;\n</pre>\n</li>\n<li>filters: per-component filter specification.  If specified for a given component, this overrides the filter config</li>\n<li>combine:\nUse the YUI combo service to reduce the number of http connections required to load your dependencies</li>\n<li>ignore:\nA list of modules that should never be dynamically loaded</li>\n<li>force:\nA list of modules that should always be loaded when required, even if already present on the page</li>\n<li>insertBefore:\nNode or id for a node that should be used as the insertion point for new nodes</li>\n<li>charset:\ncharset for dynamic nodes</li>\n<li>timeout:\nnumber of milliseconds before a timeout occurs when dynamically loading nodes.  in not set, there is no timeout</li>\n<li>onSuccess:\ncallback for the 'success' event</li>\n<li>onFailure:\ncallback for the 'failure' event</li>\n<li>onTimeout:\ncallback for the 'timeout' event</li>\n<li>onProgress:\ncallback executed each time a script or css file is loaded</li>\n<li>modules:\nA list of module definitions.  See Loader.addModule for the supported module metadata</li>\n<li>seed:\ncustom COMBO url to load a default set of components including loader in a single entry.</li>\n</ul>"}, {"type": "boolean", "name": "def", "description": "  if true, \"o\" will be used as the default configuration object for succesive \ncalls without the \"o\" argument."}], "description": "YUI_bootstrap function.  If YUI_bootstrap is already defined, the\nexisting YUI_bootstrap function will not be overwritten to preserve\nthe state of the bootstrap."}], "namespace": "", "module": "bootstrap", "methods": {"_includeLoader": {"static": "", "return": {"type": "", "description": "void"}, "description": "Include YUI Loader in the the page, and wait until it get available to start dispatching jobs", "private": ""}, "_loaderDispatch": {"static": "", "return": {"type": "", "description": "void"}, "description": "Dispatch all the pending jobs, yui 3.x will handle the queue", "private": ""}, "use": {"return": {"type": "", "description": "void"}, "params": [{"type": "string", "name": "modules*", "description": "  1-n modules to bind (uses arguments array)"}, {"type": "function", "name": "*callback", "description": "  callback function executed when \nthe instance has the required functionality.  If included, it\nmust be the last parameter.\nYUI_bootstrap().use('dd', callback)"}], "description": "Load a set of modules and notify thru the callback method.", "guessedname": "use", "guessedtype": "function"}, "_getConf": {"return": {"type": "object", "description": "computed configuration"}, "static": "", "params": [{"type": "object", "name": "o", "description": "  currrent configuration object"}], "description": "Verify if the current configuration object just defines new modules. If that's the case, \nwe will use \"_config\" as the computed configuration, and \"o\" as the list of modules to add.", "private": ""}}, "file": "yui_bootstrap.js", "shortname": "YUI_bootstrap", "description": "YUI_bootstrap function.  If YUI_bootstrap is already defined, the\nexisting YUI_bootstrap function will not be overwritten to preserve\nthe state of the bootstrap."}}, "version": "1.0.0", "modules": {"bootstrap": {"description": "Provides Bootstrap definition based on YUI 3.x.", "submodules": [], "classlist": ["YAHOO_bootstrap", "YUI_bootstrap"], "filelist": ["yahoo_bootstrap.js", "yui_bootstrap.js"], "subdata": {}, "name": "bootstrap"}}, "filemap": {"yui_bootstrap.js": {"classlist": ["YUI_bootstrap"], "name": "yui_bootstrap.js", "module": "bootstrap"}, "yahoo_bootstrap.js": {"classlist": ["YAHOO_bootstrap"], "name": "yahoo_bootstrap.js", "module": "bootstrap"}}}